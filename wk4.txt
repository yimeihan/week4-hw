1.
Loops are great when you want to do the same task/run the same code over and over again, and each time with a different value.
They are great when working with arrays.

2.
For loop syntax higher level:
for(initialization; condition; final-expression){statement}
For loop syntax basic syntax:
for (step1; step2; step3){}

3.
The for loop loops through a block of code a specified number of times.

4.
For loop example:
for (I = 0; i < 5; i++){
	text += "the number is " + i + "<br>";
}
Statement 1 sets a variable before the loop starts (var i = 0).
Statement 2 defines the condition for the loop to run (i must be less than 5).
Statement 3 increases a value (i++) each time the code block in the loop has been executed.

5.
Two characters represent the for loop code block:
({})

6.
After the code block has been executed, the program returns to step 2.
Step2(aka condition):
Defines the condition for executing the code block. If the value of the condition is true, the loop statement executes. If the value of the condition is false, the for loop terminates. if on the other the condition is not present, the condition is assumed to be true.

7.
Break statement example:
function myFunction() {
  var text = ""
  var i;
  for (i = 0; i < 5; i++) {
    if (i === 3) {
      break;
    }
    text += "The number is " + i + "<br>";
  }
  document.getElementById("demo").innerHTML = text;
}

8.
continue statement example:
function myFunction() {
  var text = "";
  var i;
  for (i = 0; i < 5; i++) {
    if (i === 3) {
      continue;
    }
    text += "The number is " + i + "<br>";
  }
  document.getElementById("demo").innerHTML = text;
}

9.
example of an array:
var cars = ["Saab", "Volvo", "BMW"];
document.getElementById("demo").innerHTML = cars;
// Saab,Volvo,BMW

10.
Another example of an array:
let vegetables = ['Cabbage', 'Turnip', 'Radish', 'Carrot']
console.log(vegetables)
// ["Cabbage", "Turnip", "Radish", "Carrot"]

11.
var cars = ['BMW', 'Volvo', 'Mini'];
var x;

for (x of cars) {
  document.write(x + "<br >");
}

//BMW
//Volvo
//Mini

12.
function myFunction() {
  var person = {fname:"John", lname:"Doe", age:25}; 
  
  var text = "";
  var x;
  for (x in person) {
    text += person[x] + " ";
  }
  document.getElementById("demo").innerHTML = text;
}
//John Doe 25
the for/in statement loops through the properties of an object.
the block of code inside the loop will be executed once for each property.

13.
For of loop example:
const array1 = ['a', 'b', 'c'];

for (const element of array1) {
  console.log(element);
}

// a
// b
// c
Loops through the values of an iterable objects. In this case an array.

For-in loop example:
var txt = "";
var person = {fname:"John", lname:"Doe", age:25}; 
var x;
for (x in person) {
  txt += person[x] + " ";
}
document.getElementById("demo").innerHTML = txt;

14.
For-in: loops through the properties of an object.
For-of: loops through the values of an iterable object.

15.
do while loop example:
var text = ""
var i = 0;

do {
  text += "<br>The number is " + i;
  i++;
}
while (i < 10);  

document.getElementById("demo").innerHTML = text;

//The number is 0
//The number is 1
//The number is 2
//The number is 3
//The number is 4
//The number is 5
//The number is 6
//The number is 7
//The number is 8
//The number is 9

Loops through a block of code while a specified condition is true. In this case number less than 10.

16.
When the break statement is used with a switch statement, it breaks out of the switch block. This will stop the execution of more execution of code and/or case testing inside the block. When the break statement is used in a loop, it breaks the loop and continues executing the code after the loop.